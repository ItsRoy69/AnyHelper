{"ast":null,"code":"//* All the AXIOS API calls will be made from here to the backend\n//* These functions will be exported and then imported wherever needed\nimport Axios from \"axios\";\nconst User_Log = \"https://milan-jwoc.herokuapp.com/user/login\";\nconst User_Reg = \"https://milan-jwoc.herokuapp.com/user/register\";\nconst Club_Log = \"https://milan-jwoc.herokuapp.com/club/login\";\nconst Club_Reg = \"https://milan-jwoc.herokuapp.com/club/register\";\nconst All_Clubs = \"https://milan-jwoc.herokuapp.com/display/allClubs\";\nconst Report_Log = \"https://milan-jwoc.herokuapp.com/user/userreport\"; //^ `````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````\n//* Axios call to login a User\n//* IF sucess we alert user made else we alert user failed\n//* we get the credentials from the Awb.jsx\n\nexport const LoginUser = async credentials => {\n  try {\n    const Post = await Axios.post(`${User_Log}`, credentials);\n    return Post;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c = LoginUser;\nexport const RegisterUser = async credentials => {\n  try {\n    const response = await Axios.post(`${User_Reg}`, credentials);\n    console.log(response);\n\n    if (response.data.exists === true) {\n      alert(\"User already present, please login\");\n    }\n\n    if (response.data.success === true) {\n      alert(\"Registration successful, please login\");\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c2 = RegisterUser;\nexport const LoginClub = async credentials => {\n  try {\n    const Post = await Axios.post(`${Club_Log}`, credentials);\n    return Post;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c3 = LoginClub;\nexport const RegisterClub = async credentials => {\n  try {\n    const response = await Axios.post(`${Club_Reg}`, credentials);\n    console.log(response);\n\n    if (response.data.exists === true) {\n      alert(\"Club already present, please login\");\n    }\n\n    if (response.data.success === true) {\n      alert(\"Registration successful, please login\");\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c4 = RegisterClub;\nexport const GetAllClubs = async () => {\n  try {\n    const response = await Axios.get(`${All_Clubs}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c5 = GetAllClubs;\nexport const ReportProblem = async credentials => {\n  try {\n    const response = await Axios.post(\"http://localhost:5000/user/userreport\", credentials); // \"http://localhost:5000/user/userreport\"\n    // `${Report_Log}`\n\n    if (response.data.success === true) {\n      return true;\n    } else if (response.data.message === \"tryagain\") {\n      return \"tryagain\";\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n_c6 = ReportProblem;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"LoginUser\");\n$RefreshReg$(_c2, \"RegisterUser\");\n$RefreshReg$(_c3, \"LoginClub\");\n$RefreshReg$(_c4, \"RegisterClub\");\n$RefreshReg$(_c5, \"GetAllClubs\");\n$RefreshReg$(_c6, \"ReportProblem\");","map":{"version":3,"sources":["C:/Users/Jyotirmoy/Downloads/Milan-main/src/service/MilanApi.js"],"names":["Axios","User_Log","User_Reg","Club_Log","Club_Reg","All_Clubs","Report_Log","LoginUser","credentials","Post","post","error","console","log","alert","RegisterUser","response","data","exists","success","LoginClub","RegisterClub","GetAllClubs","get","ReportProblem","message"],"mappings":"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","sourcesContent":["//* All the AXIOS API calls will be made from here to the backend\n//* These functions will be exported and then imported wherever needed\n\nimport Axios from \"axios\";\n\nconst User_Log = \"https://milan-jwoc.herokuapp.com/user/login\";\nconst User_Reg = \"https://milan-jwoc.herokuapp.com/user/register\";\nconst Club_Log = \"https://milan-jwoc.herokuapp.com/club/login\";\nconst Club_Reg = \"https://milan-jwoc.herokuapp.com/club/register\";\nconst All_Clubs = \"https://milan-jwoc.herokuapp.com/display/allClubs\";\nconst Report_Log = \"https://milan-jwoc.herokuapp.com/user/userreport\";\n//^ `````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````\n//* Axios call to login a User\n//* IF sucess we alert user made else we alert user failed\n//* we get the credentials from the Awb.jsx\n\nexport const LoginUser = async (credentials) => {\n  try {\n    const Post = await Axios.post(`${User_Log}`, credentials);\n    return Post;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n\nexport const RegisterUser = async (credentials) => {\n  try {\n    const response = await Axios.post(`${User_Reg}`, credentials);\n    console.log(response);\n\n    if (response.data.exists === true) {\n      alert(\"User already present, please login\");\n    }\n\n    if (response.data.success === true) {\n      alert(\"Registration successful, please login\");\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n\nexport const LoginClub = async (credentials) => {\n  try {\n    const Post = await Axios.post(`${Club_Log}`, credentials);\n    return Post;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\nexport const RegisterClub = async (credentials) => {\n  try {\n    const response = await Axios.post(`${Club_Reg}`, credentials);\n    console.log(response);\n\n    if (response.data.exists === true) {\n      alert(\"Club already present, please login\");\n    }\n\n    if (response.data.success === true) {\n      alert(\"Registration successful, please login\");\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n\nexport const GetAllClubs = async () => {\n  try {\n    const response = await Axios.get(`${All_Clubs}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n};\n\nexport const ReportProblem = async (credentials) => {\n  try {\n    const response = await Axios.post(\"http://localhost:5000/user/userreport\", credentials);\n    // \"http://localhost:5000/user/userreport\"\n    // `${Report_Log}`\n    if (response.data.success === true){\n      return true;\n    }else if (response.data.message === \"tryagain\"){\n      return \"tryagain\";\n    }else{\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n    alert(\"INTERNAL ERROR, PLEASE TRY AGAIN LATER\");\n  }\n}"]},"metadata":{},"sourceType":"module"}